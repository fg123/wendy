struct point => (x, y);
let a = point(10, 40);
a.x;
a.y;

// Define object/class with instance and static members
struct shape => (x, y) [print]
shape.print => () {
  "Shape at (" + this.x + ", " + this.y + ")"
}

// Implicit constructor based on instance members
let myGenericShape = shape(10, 20)
myGenericShape.print()

// Override constructor to ensure both fields are the same
struct shape2 => (x, y) [print] {
	init => (x) {
		this.x = x
		this.y = x
		ret this
	}
}
shape2.print => () {
  "Shape at (" + this.x + ", " + this.y + ")"
}

let otherShape = shape2(50)
otherShape.print()


// New method of declaring static members
struct shape1 => (x, y) {
	print => () {
		"Shape at (" + this.x + ", " + this.y + ")"
	};
};

let myGenericShape2 = shape1(10, 20)
myGenericShape2.print()